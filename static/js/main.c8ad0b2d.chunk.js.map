{"version":3,"sources":["components/Weather.js","components/Form.js","App.js","index.js"],"names":["Weather","props","undefined","city","className","class","country","icon","celsius","main","description","temp_max","temp_min","Form","onSubmit","this","loadWeather","type","name","placeholder","autoComplete","React","Component","App","getWeather","e","a","preventDefault","target","elements","value","fetch","api_call","json","response","console","log","setState","sys","weather","calCel","temp","get_WeatherIcon","weatherIcon","id","error","state","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","Math","floor","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c8ad0b2d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Weather.css\";\r\nconst Weather = (props) => {\r\n  if (props.city != undefined) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron\">\r\n          <h1 class=\"display-4\">\r\n            {props.city},{props.country}'s Weather...\r\n            <i className={`wi ${props.icon}`} />\r\n          </h1>\r\n          <p class=\"lead\">\r\n            {\" \"}\r\n            {props.celsius} Celcius :{props.main}\r\n          </p>\r\n          <p>{props.description}</p>\r\n\r\n          <hr class=\"my-4\"></hr>\r\n\r\n          <p className=\"card-text\">\r\n            At Most:{props.temp_max} and At Min:{props.temp_min}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\nexport default Weather;\r\n","import React from \"react\";\r\nimport \"./Form.css\";\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container h-100\">\r\n        <form onSubmit={this.props.loadWeather}>\r\n          <div className=\"row\">\r\n            <div className=\"city col-md-3 offset-md-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n                className=\"form-control\"\r\n                autoComplete=\"false\"\r\n              />\r\n            </div>\r\n            <div className=\"country col-md-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"country\"\r\n                autoComplete=\"false\"\r\n                placeholder=\"Country\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\r\n              <button className=\"btn btn-warning\">Get Weather</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Weather from \"./components/Weather\";\r\nimport Form from \"./components/Form\";\r\nimport \"./App.css\";\r\nconst Api_Key = \"7c7d2b09fb19361cc6aa037e74b9ac9f\";\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      city: undefined,\r\n      country: undefined,\r\n      icon: undefined,\r\n      celsius: undefined,\r\n      temp_max: undefined,\r\n      temp_min: undefined,\r\n      main: undefined,\r\n      description: \"\",\r\n      error: false,\r\n    };\r\n\r\n    this.weatherIcon = {\r\n      Thunderstorm: \"wi-thunderstorm\",\r\n      Drizzle: \"wi-sleet\",\r\n      Rain: \"wi-storm-showers\",\r\n      Snow: \"wi-snow\",\r\n      Atmosphere: \"wi-fog\",\r\n      Clear: \"wi-day-sunny\",\r\n      Clouds: \"wi-day-fog\",\r\n    };\r\n  }\r\n  get_WeatherIcon(icons, rangeId) {\r\n    switch (true) {\r\n      case rangeId >= 200 && rangeId < 232:\r\n        this.setState({ icon: icons.Thunderstorm });\r\n        break;\r\n      case rangeId >= 300 && rangeId <= 321:\r\n        this.setState({ icon: icons.Drizzle });\r\n        break;\r\n      case rangeId >= 500 && rangeId <= 521:\r\n        this.setState({ icon: icons.Rain });\r\n        break;\r\n      case rangeId >= 600 && rangeId <= 622:\r\n        this.setState({ icon: icons.Snow });\r\n        break;\r\n      case rangeId >= 701 && rangeId <= 781:\r\n        this.setState({ icon: icons.Atmosphere });\r\n        break;\r\n      case rangeId === 800:\r\n        this.setState({ icon: icons.Clear });\r\n        break;\r\n      case rangeId >= 801 && rangeId <= 804:\r\n        this.setState({ icon: icons.Clouds });\r\n        break;\r\n      default:\r\n        this.setState({ icon: icons.Clouds });\r\n    }\r\n  }\r\n\r\n  calCel(temp) {\r\n    let cel = Math.floor(temp - 273.15);\r\n    return cel;\r\n  }\r\n  getWeather = async (e) => {\r\n    e.preventDefault();\r\n    const country = e.target.elements.country.value;\r\n    const city = e.target.elements.city.value;\r\n    if (city && country) {\r\n      const api_call = await fetch(\r\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\r\n      );\r\n      const response = await api_call.json();\r\n      console.log(response);\r\n      this.setState({\r\n        city: response.name,\r\n        country: response.sys.country,\r\n        description: response.weather[0].description,\r\n        temp_max: this.calCel(response.main.temp_max),\r\n        temp_min: this.calCel(response.main.temp_min),\r\n        main: response.weather[0].main,\r\n        celsius: this.calCel(response.main.temp),\r\n      });\r\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1 className=\"titr\">Weather App</h1>\r\n        </div>\r\n        <Form loadWeather={this.getWeather}></Form>\r\n        <Weather\r\n          city={this.state.city}\r\n          country={this.state.country}\r\n          main={this.state.main}\r\n          temp_max={this.state.temp_max}\r\n          temp_min={this.state.temp_min}\r\n          icon={this.state.icon}\r\n          description={this.state.description}\r\n          celsius={this.state.celsius}\r\n          error={this.state.error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nReactDOM.render(<App></App>, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}